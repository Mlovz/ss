name: App Release

on:
  push:
    branches: [master]
    paths:
      - 'apps/web/package.json'
      - 'apps/web/CHANGELOG.md'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  tag_and_release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Read version
        id: readver
        shell: bash
        run: |
          VERSION=$(node -p "require('./apps/web/package.json').version")
          if [ -z "$VERSION" ]; then
            echo "Version is empty. Check apps/web/package.json"
            exit 1
          fi
          echo "VERSION=$VERSION" >> "$GITHUB_ENV"
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Create tag if missing
        shell: bash
        run: |
          git fetch --tags
          TAG="web-v${{ steps.readver.outputs.version }}"
          if git rev-parse "refs/tags/$TAG" >/dev/null 2>&1; then
            echo "Tag $TAG already exists, skipping"
          else
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git tag -a "$TAG" -m "web v${{ steps.readver.outputs.version }}"
            git push origin "$TAG"
          fi

      - name: Extract top release notes
        id: notes
        shell: bash
        run: |
          VERSION="${{ steps.readver.outputs.version }}"
          if [ ! -f apps/web/CHANGELOG.md ]; then
            echo "# $VERSION" > RELEASE_NOTES.md
            exit 0
          fi
          node -e "
            const fs = require('fs');
            const version = process.env.VERSION;
            const md = fs.readFileSync('apps/web/CHANGELOG.md','utf8');
            const esc = s => s.replace(/[.*+?^${}()|[\]\\]/g,'\\\\$&');
            const re = new RegExp('##\\\\s*' + esc(version) + '[\\\\s\\\\S]*?(?=\\n##\\\\s|$)');
            const m = md.match(re);
            fs.writeFileSync('RELEASE_NOTES.md', m ? m[0] : ('# ' + version + '\\n'));
          "
        env:
          VERSION: ${{ steps.readver.outputs.version }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: web-v${{ steps.readver.outputs.version }}
          name: web v${{ steps.readver.outputs.version }}
          body_path: RELEASE_NOTES.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
